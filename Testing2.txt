## Creating a Separate Repository for the Second Program

**1. Create a New Repository on GitHub:**

- Log in to your GitHub account.
- Click the "New repository" button.
- Give your repository a name, such as "second-program".
- Choose the repository visibility (public or private).
- Click "Create repository".

**2. Clone the Repository Locally:**

- Open your terminal or Git Bash.
- Navigate to the desired directory.
- Clone the repository:
  ```bash
  git clone https://github.com/your_username/second-program.git
  ```
  Replace `https://github.com/your_username/second-program.git` with the actual URL of your repository.

**3. Create the Second Program File:**

- Navigate to the newly cloned directory:
  ```bash
  cd second-program
  ```
- Create a new file (e.g., `SecondProgram.java`) and write your code.

**4. Stage and Commit the File:**

- Add the file to the staging area:
  ```bash
  git add SecondProgram.java
  ```
- Commit the changes:
  ```bash
  git commit -m "Initial commit for SecondProgram"
  ```

**5. Push the Changes to Remote Repository:**
- Push the local changes to the remote repository:
  ```bash
  git push -u origin main
  ```

**6. (Optional) Create a New Branch:**
- If you want to work on a specific feature or bug fix, create a new branch:
  ```bash
  git checkout -b feature-branch
  ```
- Make changes to your files and commit them.
- Merge the branch into the main branch when you're done.

**7. (Optional) Pull Changes from Remote Repository:**
- If you're working with others, you might need to pull changes from the remote repository:
  ```bash
  git pull origin main
  ```

**Remember:**
- Use clear and concise commit messages.
- Commit your changes frequently.
- Push your changes to the remote repository regularly.
- Consider using a Git GUI tool like GitHub Desktop or SourceTree for a visual interface.

By following these steps, you can create a separate repository for your second program, manage its version control, and collaborate with others effectively.




git fetch origin

git pull origin main

git merge origin/main




